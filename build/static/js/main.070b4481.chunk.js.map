{"version":3,"sources":["styles/Nominee.module.css","styles/Button.module.css","styles/Modal.module.css","styles/Category.module.css","styles/Title.module.css","styles/Ballot.module.css","styles/Results.module.css","styles/App.module.css","Api/Api.ts","util/flattenResults.ts","contexts/selectionContext.ts","Components/general/Button/Button.tsx","Components/general/Title/Title.tsx","Components/Nominee/Nominee.tsx","Components/Category/Category.tsx","Components/Ballot/Ballot.tsx","Components/Results/Results.tsx","Components/general/Modal/Modal.tsx","util/categorizeBallot.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["module","exports","apiKey","api","getBallotData","Promise","all","fetch","res","map","r","json","data","reduce","acc","curr","push","Search","alert","undefined","SelectionContext","createContext","Button","text","className","onClick","cx","styles","button","hovered","type","Title","headingLevel","Heading","title","Nominee","imageUrl","category","selected","selectionContext","useContext","showImage","nominee","alt","poster","role","style","backgroundImage","chooseSelection","Category","nominees","n","Poster","userSelection","imdbID","Ballot","ballot","length","items","id","Results","Object","entries","selection","Modal","showModal","setShowModal","children","overlay","modal","content","categorizeBallotData","allBallotData","categories","firstTwentyFiveNominees","slice","categorizedData","i","App","useState","setBallot","setUserSelection","useEffect","shouldUpdate","then","ballotData","useCallback","selectionContextValue","useMemo","hasSelectedAllNominees","keys","app","Provider","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.070b4481.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nominee\":\"Nominee_nominee__2P7PF\",\"poster\":\"Nominee_poster__2Pqcc\",\"selected\":\"Nominee_selected__180d7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2SZ4k\",\"nominee\":\"Button_nominee__1XWdB Button_button__2SZ4k\",\"close\":\"Button_close__3D0LI\",\"submit\":\"Button_submit__18ks_ Button_button__2SZ4k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__1UzxN\",\"modal\":\"Modal_modal__3Sw5R\",\"content\":\"Modal_content__6ekOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nominee-container\":\"Category_nominee-container__2ymBd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__27lU8\",\"app\":\"Title_app__1Kn5L Title_title__27lU8\",\"category\":\"Title_category__3GvbL Title_title__27lU8\",\"nominee\":\"Title_nominee__31YbW Title_title__27lU8\",\"results\":\"Title_results__3tL7- Title_title__27lU8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ballot\":\"Ballot_ballot__3R_4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selection\":\"Results_selection__2ZrqY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__101rE\"};","import { OmdbResponse, SearchResult } from '../types/omdbResponse';\nimport { flattenResults } from '../util/flattenResults';\n\n// typically wouldn't do this but it's a free API and easily accessed without a backend anyway ¯\\_(ツ)_/¯\nconst apiKey = '14ac79b8';\n\nconst api = {\n  async getBallotData(): Promise<SearchResult[] | undefined> {\n    try {\n      const res = await Promise.all([\n        fetch(\n          `https://www.omdbapi.com/?s=california&page=${1}&apikey=${apiKey}`\n        ),\n        fetch(\n          `https://www.omdbapi.com/?s=california&page=${2}&apikey=${apiKey}`\n        ),\n        fetch(\n          `https://www.omdbapi.com/?s=california&page=${3}&apikey=${apiKey}`\n        )\n      ]);\n\n      const data: OmdbResponse[] = await Promise.all(res.map((r) => r.json()));\n      return flattenResults(data);\n    } catch {\n      // eslint-disable-next-line\n      alert('ballot data failed to load, please reload the page');\n    }\n\n    return undefined;\n  }\n};\n\nexport default api;\n","import { OmdbResponse, SearchResult } from '../types/omdbResponse';\n\nexport const flattenResults = (arr: OmdbResponse[]): SearchResult[] => {\n  return arr.reduce<SearchResult[]>((acc, curr) => {\n    acc.push(...curr.Search);\n    return acc;\n  }, []);\n};\n","import { createContext, useContext } from 'react';\n\ninterface SelectionContextData {\n  chooseSelection: (category: string, selection: string) => void;\n  userSelection: { [key: string]: string };\n}\n\nexport const SelectionContext = createContext<SelectionContextData | undefined>(\n  undefined\n);\n\nexport function useSelectionContext(): SelectionContextData {\n  const selectionContext = useContext(SelectionContext);\n  if (!selectionContext) {\n    throw new Error(\n      'useSelectionContext must be used within the SelectionContext.Provider'\n    );\n  }\n\n  return selectionContext;\n}\n","import cx from 'classnames';\nimport { FC } from 'react';\nimport styles from '../../../styles/Button.module.css';\n\ninterface ButtonProps {\n  text: string;\n  className?: string;\n  onClick: () => void;\n}\n\nconst Button: FC<ButtonProps> = ({\n  text,\n  className = '',\n  onClick = () => undefined\n}) => {\n  return (\n    <button\n      className={cx(styles.button, styles[className], styles.hovered)}\n      onClick={onClick}\n      type=\"button\"\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import cx from 'classnames';\nimport { FC } from 'react';\nimport styles from '../../../styles/Title.module.css';\n\ninterface TitleProps {\n  text: string;\n  headingLevel: 1 | 2 | 3 | 4 | 5 | 6;\n  className?: string;\n}\n\nconst Title: FC<TitleProps> = ({ text, headingLevel = 1, className = '' }) => {\n  const Heading: keyof JSX.IntrinsicElements = `h${headingLevel}`;\n\n  return (\n    <div className={cx(styles.title, styles[className])}>\n      <Heading>{text}</Heading>\n    </div>\n  );\n};\n\nexport default Title;\n","import cx from 'classnames';\nimport { FC, useContext } from 'react';\nimport { SelectionContext } from '../../contexts/selectionContext';\nimport styles from '../../styles/Nominee.module.css';\nimport Button from '../general/Button/Button';\nimport Title from '../general/Title/Title';\n\ninterface NomineeProps {\n  title: string;\n  imageUrl: string;\n  category: string;\n  selected: boolean;\n}\n\nconst Nominee: FC<NomineeProps> = ({ title, imageUrl, category, selected }) => {\n  const selectionContext = useContext(SelectionContext);\n\n  const showImage = imageUrl !== 'N/A';\n  return (\n    <div className={cx(styles.nominee, { [styles.selected]: selected })}>\n      <Title className=\"nominee\" headingLevel={3} text={title} />\n      {showImage && (\n        <div\n          alt={`${title} movie poster`}\n          className={styles.poster}\n          role=\"img\"\n          style={{ backgroundImage: `url(${imageUrl})` }}\n        />\n      )}\n      <Button\n        className=\"nominee\"\n        onClick={() => selectionContext?.chooseSelection(category, title)}\n        text=\"Select Nominee\"\n      />\n    </div>\n  );\n};\n\nexport default Nominee;\n","import { FC, useContext } from 'react';\nimport { SelectionContext } from '../../contexts/selectionContext';\nimport styles from '../../styles/Category.module.css';\nimport { SearchResult } from '../../types/omdbResponse';\nimport Nominee from '../Nominee/Nominee';\nimport Title from '../general/Title/Title';\n\ninterface CategoryProps {\n  category: string;\n  nominees: SearchResult[];\n}\n\nconst Category: FC<CategoryProps> = ({ category, nominees }) => {\n  const selectionContext = useContext(SelectionContext);\n  return (\n    <section className={styles.category}>\n      <Title className=\"category\" headingLevel={2} text={category} />\n      <div className={styles['nominee-container']}>\n        {nominees.map((n) => (\n          <Nominee\n            category={category}\n            imageUrl={n.Poster}\n            key={n.imdbID}\n            selected={selectionContext?.userSelection[category] === n.Title}\n            title={n.Title}\n          />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default Category;\n","import { FC } from 'react';\nimport styles from '../../styles/Ballot.module.css';\nimport { CategorizedBallotData } from '../../types/ballotData';\nimport Category from '../Category/Category';\n\ninterface BallotProps {\n  ballot: CategorizedBallotData[];\n}\n\nconst Ballot: FC<BallotProps> = ({ ballot }) => {\n  return (\n    <div className={styles.ballot}>\n      {ballot.length > 0 &&\n        ballot.map((category) => (\n          <Category\n            category={category.category}\n            key={category.id + category.category}\n            nominees={category.items}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default Ballot;\n","import { FC } from 'react';\nimport styles from '../../styles/Results.module.css';\nimport Title from '../general/Title/Title';\n\ninterface ResultsProps {\n  userSelection: { [key: string]: string };\n}\n\nconst Results: FC<ResultsProps> = ({ userSelection }) => {\n  return (\n    <div>\n      {Object.entries(userSelection).map(([category, selection]) => {\n        return (\n          <div key={`result-${category}`}>\n            <Title className=\"results\" headingLevel={3} text={category} />\n            <p className={styles.selection}>{selection}test</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Results;\n","import { FC, ReactNode, Dispatch, SetStateAction } from 'react';\nimport styles from '../../../styles/Modal.module.css';\nimport Button from '../Button/Button';\n\ninterface ModalProps {\n  showModal: boolean;\n  setShowModal: Dispatch<SetStateAction<boolean>>;\n  children: ReactNode | JSX.Element;\n}\n\nconst Modal: FC<ModalProps> = ({ showModal, setShowModal, children }) => {\n  if (!showModal) return null;\n\n  return (\n    <div className={styles.overlay}>\n      <div className={styles.modal}>\n        <Button\n          className=\"close\"\n          onClick={() => setShowModal(false)}\n          text=\"X\"\n        />\n        <div className={styles.content}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { CategorizedBallotData } from '../types/ballotData';\nimport { SearchResult } from '../types/omdbResponse';\n\nexport const categorizeBallotData = (\n  allBallotData: SearchResult[]\n): CategorizedBallotData[] => {\n  const categories = [\n    'Best Actor',\n    'Best Picture',\n    'Best Director',\n    'Best Actress',\n    'Best Supporting Actor'\n  ];\n\n  // slice the first 25 items since we only need 5 nominees in 5 categories (5 X 5 = 25)\n  const firstTwentyFiveNominees = allBallotData.slice(0, 25);\n  const categorizedData = [];\n\n  // chunk all ballot data into groups of 5, add a category and id\n  for (let i = 0; i < firstTwentyFiveNominees.length; i += 5) {\n    categorizedData.push({\n      category: categories[i / 5],\n      id: i / 5 + 1,\n      items: [...firstTwentyFiveNominees.slice(i, i + 5)]\n    });\n  }\n\n  return categorizedData;\n};\n","import { FC, useEffect, useState, useCallback, useMemo } from 'react';\nimport api from './Api/Api';\nimport './styles/reset.css';\nimport './styles/main.css';\nimport Ballot from './Components/Ballot/Ballot';\nimport Results from './Components/Results/Results';\nimport Button from './Components/general/Button/Button';\nimport Modal from './Components/general/Modal/Modal';\nimport Title from './Components/general/Title/Title';\nimport { SelectionContext } from './contexts/selectionContext';\nimport styles from './styles/App.module.css';\nimport { CategorizedBallotData } from './types/ballotData';\nimport { categorizeBallotData } from './util/categorizeBallot';\n\nconst App: FC = () => {\n  const [ballot, setBallot] = useState<CategorizedBallotData[] | []>([]);\n  const [userSelection, setUserSelection] = useState<{ [key: string]: string }>(\n    {}\n  );\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    let shouldUpdate = true;\n\n    (async () => {\n      await api.getBallotData().then((data) => {\n        if (data && shouldUpdate) {\n          const ballotData = categorizeBallotData(data);\n          setBallot(ballotData);\n        }\n      });\n\n      return () => {\n        shouldUpdate = false;\n      };\n    })();\n  }, []);\n\n  const chooseSelection = useCallback(\n    (category: string, selection: string) => {\n      setUserSelection({ ...userSelection, [category]: selection });\n    },\n    [userSelection, setUserSelection]\n  );\n\n  const selectionContextValue = useMemo(() => {\n    return { chooseSelection, userSelection };\n  }, [chooseSelection, userSelection]);\n\n  const hasSelectedAllNominees =\n    userSelection && Object.keys(userSelection).length >= 5;\n\n  return (\n    <div className={styles.app}>\n      <Modal setShowModal={setShowModal} showModal={showModal}>\n        <Results userSelection={userSelection} />\n      </Modal>\n      <Title className=\"app\" headingLevel={1} text=\"Awards 2022\" />\n      <SelectionContext.Provider value={selectionContextValue}>\n        <Ballot ballot={ballot} />\n      </SelectionContext.Provider>\n      {hasSelectedAllNominees && (\n        <Button\n          className=\"submit\"\n          onClick={() => setShowModal(true)}\n          text=\"Submit Selection\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}